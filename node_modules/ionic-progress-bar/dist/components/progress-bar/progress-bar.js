import { Component, ChangeDetectorRef } from '@angular/core';
import { NavParams, Events } from 'ionic-angular';
var HTML_TEMPLATE = "\n<ion-content class=\"main-view\">\n    <div class=\"overlay\" (click)=\"dismiss()\"></div>\n    <ion-scroll class=\"modal_content\" scrollY=\"false\">\n\n        <div class=\"message\" text-nowrap>\n            <ion-spinner></ion-spinner><span [innerHTML]=\"message\"></span></div>\n        <div class=\"progress-outer\">\n            <div class=\"progress-inner\" [ngStyle]=\"{'opacity': progress > 0 ? 1 : 0}\"  [style.width]=\"progress.toString() + '%'\">\n                {{progress | number: '1.0-0'}}%\n            </div>\n        </div>\n    </ion-scroll>\n</ion-content>\n";
var CSS_STYLE = "\n\n    .main-view{\n      background: transparent;\n    }\n    .overlay {\n      position: fixed;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 1;\n      opacity: .5;\n      background-color: #333;\n    }\n    .modal_content {\n      position: absolute;\n      padding-top: 10px;\n      top: calc(50% - (20%/2));\n      left: 0;\n      right: 0;\n      width: 90%;\n      height: 80px;\n      padding: 10px;\n      z-index: 100;\n      margin: 0 auto;\n      color: #333;\n      background: #e8e8e8;\n      background: -moz-linear-gradient(top, #fff 0%, #e8e8e8 100%);\n      background: -webkit-linear-gradient(top, #fff 0%, #e8e8e8 100%);\n      background: linear-gradient(to bottom, #fff 0%, #e8e8e8 100%);\n      border-radius: 5px;\n      box-shadow: 0 2px 3px rgba(51, 51, 51, .35);\n      box-sizing: border-box;\n      -moz-box-sizing: border-box;\n      -webkit-box-sizing: border-box;\n      overflow: hidden;\n    }\n\n    .message{\n        width: 100%;\n        padding: 10px 16px 0px 16px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    \n    .message > ion-spinner{\n        height: 20px;\n        width: 20px;\n        margin-right: 16px;\n        vertical-align: middle;\n        *{\n            stroke: color($colors, primary);\n        }\n    }\n\n    .theroot {\n        height: 100px;\n        background-color: yellow;\n    }\n\n\n    .progress-outer {\n        margin: 10px 15px;\n        padding: 3px;\n        text-align: center;\n        background-color: #f4f4f4;\n        border: 1px solid #dcdcdc;\n        color: #fff;\n        border-radius: 20px;\n    }\n\n    .progress-inner {\n        min-width: 0%;\n        white-space: nowrap;\n        overflow: hidden;\n        padding: 2px;\n        border-radius: 10px;\n        background-color: #4286f4;\n    }\n\n\n.modal-wrapper{\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n\n";
var SimpleProgressBarComponent = (function () {
    function SimpleProgressBarComponent(params, events, ref) {
        this.params = params;
        this.events = events;
        this.ref = ref;
        this.message = "";
        this.progress = 0;
        this._total = 0;
        this._actual = 0;
        this.progress = 0;
        this.message = params.get('message');
        this._total = params.get('total');
        this._actual = params.get('actual');
        this._milestone({
            message: this.message,
            only_message: true
        });
    }
    SimpleProgressBarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.events.subscribe('milestone:add', function (params) { return _this._milestone(params); });
    };
    SimpleProgressBarComponent.prototype.ngOnDestroy = function () {
        this.events.unsubscribe('milestone:add');
    };
    SimpleProgressBarComponent.prototype._milestone = function (params) {
        var _this = this;
        setTimeout(function () {
            _this.message = params.message;
            if (!params.only_message) {
                _this._actual++;
                _this.progress = (100 * _this._actual) / _this._total;
            }
            _this.ref.detectChanges();
        });
    };
    SimpleProgressBarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'progress-bar',
                    template: HTML_TEMPLATE,
                    styles: [CSS_STYLE]
                },] },
    ];
    /** @nocollapse */
    SimpleProgressBarComponent.ctorParameters = function () { return [
        { type: NavParams, },
        { type: Events, },
        { type: ChangeDetectorRef, },
    ]; };
    return SimpleProgressBarComponent;
}());
export { SimpleProgressBarComponent };
//# sourceMappingURL=progress-bar.js.map